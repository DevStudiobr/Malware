import requests
from bs4 import BeautifulSoup
import re

# Lista de domínios suspeitos conhecidos
dominios_suspeitos = ["malware.com", "badsite.org", "suspicious.net"]

# Palavras-chave suspeitas em URLs e scripts
palavras_suspeitas = ["tracking", "analytics", "malicious", "adware", "spyware", "phishing"]

def verificar_url(url):
    try:
        resposta = requests.get(url, timeout=10)
        
        if resposta.status_code == 200:
            print(f"Acessando: {url}")
            soup = BeautifulSoup(resposta.content, 'html.parser')

            # Analisando links suspeitos
            links_suspeitos = []
            for link in soup.find_all('a', href=True):
                href = link['href']
                if "http" in href and any(suspeito in href for suspeito in dominios_suspeitos + palavras_suspeitas):
                    links_suspeitos.append(href)

            # Analisando iFrames suspeitos
            iframes_suspeitos = []
            for iframe in soup.find_all('iframe', src=True):
                if "http" in iframe['src'] and not url in iframe['src']:
                    iframes_suspeitos.append(iframe['src'])

            # Analisando scripts suspeitos
            scripts_suspeitos = []
            for script in soup.find_all('script', src=True):
                if "http" in script['src'] and any(suspeito in script['src'] for suspeito in palavras_suspeitas + dominios_suspeitos):
                    scripts_suspeitos.append(script['src'])

                # Verificando scripts ofuscados (Base64 ou Hexadecimal)
                if script.get_text():
                    script_content = script.get_text()
                    if re.search(r'[A-Za-z0-9+/=]{40,}', script_content):  # Base64 detectado
                        scripts_suspeitos.append('Script possivelmente ofuscado encontrado.')

            # Exibindo resultados
            print_resultados(links_suspeitos, iframes_suspeitos, scripts_suspeitos)

        else:
            print(f"Erro ao acessar o site. Código de status: {resposta.status_code}")

    except requests.exceptions.RequestException as e:
        print(f"Erro ao verificar a URL: {e}")

def print_resultados(links, iframes, scripts):
    if links:
        print("\nLinks suspeitos encontrados:")
        for link in links:
            print(link)
    else:
        print("Nenhum link suspeito encontrado.")

    if iframes:
        print("\nIFrames suspeitos encontrados:")
        for iframe in iframes:
            print(iframe)
    else:
        print("Nenhum iFrame suspeito encontrado.")

    if scripts:
        print("\nScripts suspeitos encontrados:")
        for script in scripts:
            print(script)
    else:
        print("Nenhum script suspeito encontrado.")

if __name__ == "__main__":
    url = input("Digite a URL do site para verificar: ")
    if not url.startswith("http"):
        url = "http://" + url
    verificar_url(url)
